{"version":3,"sources":["js/Home.js","js/About.js","js/Menu.js","js/Fa.js","js/Fm.js","js/Ll.js","js/Ev.js","js/Fp.js","js/Bio.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","finishLoading","setState","loading","showPage","id","state","this","className","color","css","override","size","autoPlay","loop","muted","src","type","onPlay","Component","About","href","Menu","scroll","anchor","document","querySelector","console","log","scrollIntoView","behavior","block","onClick","Fa","toggleContent","content","showTitle","title","Transition","timeout","in","style","defaultStyle","transitionStyles","onLoad","defaultColor","transitionColor","controls","onLoadedData","Fm","Ll","Ev","Bio","transition","opacity","entering","entered","exiting","exited","visibility","App","show","Fp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.957c76e3.chunk.js","sourcesContent":["import {Component, React} from 'react';\nimport '../css/Home.css'\nimport DotLoader from \"react-spinners/DotLoader\";\nimport {override} from '../App'\n\nclass Home extends Component {\n    constructor(props) {\n        super();\n        this.id = props.id\n        this.showPage = props.showPage\n        this.state = {\n            loading: true\n        }\n    }\n\n    finishLoading = () => {\n        this.setState({\n            loading: false\n        }, () => {\n            this.showPage()\n        })\n\n    }\n\n\n    render() {\n        return <div id={this.id} className=\"home-container\">\n            {this.state.loading && <div className=\"overlay-home\">\n                <DotLoader color={\"#4758FF\"} loading={this.state.loading} css={override} size={`30vmax`}/>\n            </div>}\n            <video id=\"video\" autoPlay loop muted src={\"/media/mballs_horizontal_crop.mp4\"} type={\"video/mp4\"}\n                   onPlay={this.finishLoading}>Sorry\n            </video>\n            <div className=\"name\">\n                MARGO <br/> NOWICKA\n            </div>\n        </div>\n    }\n}\n\nexport default Home;","import {Component, React} from 'react';\nimport '../css/About.css'\n\nclass About extends Component {\n    constructor(props) {\n        super();\n        this.id = props.id\n    }\n\n    render() {\n        return <div id={this.id} className=\"about-container\">\n            <div className=\"text-container\">\n                <div className=\"text\">\n                    Hi! My name is <b>Małgorzata Nowicka</b>.\n                    I completed a BSc degree in Computer Science at the Warsaw University of Technology.\n                    <br/>\n                    My interests revolve around <b>bridging my technical education and a passion for digital art</b>.\n                    I do that by incorporating 3D modeling, animation, generative coding, data visualization into\n                    my software and machine learning projects.\n                </div>\n                <div className=\"icon-container\">\n                    <b>Contact me:</b>\n                    <div className=\"icon\">\n                        <img className=\"svg\" src=\"/github.svg\"/>\n                        <a href={\"https://github.com/nowickam\"}>github.com/nowickam</a>\n                    </div>\n                    <div className=\"icon\">\n                        <img className=\"svg\" src=\"/linkedin.svg\"/>\n                        <a href={\"https://linkedin.com/in/malgorzata-nowicka\"}>linkedin.com/in/malgorzata-nowicka</a>\n                    </div>\n                    <div className=\"icon\">\n                        <img className=\"svg\" src=\"/gmail.svg\"/>\n                        <a href={\"mailto:mngnowicka@gmail.com\"}>mngnowicka@gmail.com</a>\n                    </div>\n                    <div className=\"icon\">\n                        <img className=\"svg\" src=\"/vimeo.svg\"/>\n                        <a href={\"https://vimeo.com/user134790193\"}>vimeo.com/user134790193</a>\n                    </div>\n                </div>\n            </div>\n            <video id=\"video-about\" autoPlay loop muted src={\"/media/mballs_vertical_crop.mp4\"}\n                   type={\"video/mp4\"}>Sorry\n            </video>\n        </div>\n    }\n}\n\nexport default About;","import {Component, React} from 'react';\nimport '../css/Menu.css'\n\nclass Menu extends Component {\n    constructor() {\n        super();\n    }\n\n    scroll = (id) => {\n        const anchor = document.querySelector(id)\n        console.log(document)\n        console.log(anchor)\n        if (anchor !== null)\n            anchor.scrollIntoView({behavior: 'smooth', block: 'center'})\n    }\n\n    render() {\n        return <div id=\"menu\" className=\"menu-container\">\n            <div className=\"menu-element\" onClick={() => {\n                this.scroll('#home')\n            }}>home\n            </div>\n            <div className=\"menu-element\" onClick={() => {\n                this.scroll('#fa')\n            }}>work\n            </div>\n            <div className=\"menu-element\" onClick={() => {\n                this.scroll('#about')\n            }}>about\n            </div>\n        </div>\n    }\n}\n\nexport default Menu;","import {Component, React} from 'react';\nimport '../css/Fa.css'\nimport DotLoader from \"react-spinners/DotLoader\";\nimport {defaultColor, defaultStyle, override, transitionColor, transitionStyles} from '../App'\nimport {Transition} from \"react-transition-group\";\n\n\nclass Fa extends Component {\n    constructor(props) {\n        super();\n        this.id = props.id\n        this.title = props.title\n        this.state = {\n            loading: true,\n            content: false,\n            title: false,\n        }\n    }\n\n    toggleContent = () => {\n        if (this.state.content) {\n            this.setState({\n                content: false,\n            })\n        } else {\n            this.setState({\n                content: this.id,\n            })\n        }\n    }\n\n    showTitle = () => {\n        this.setState({\n            title: true\n        })\n    }\n\n\n    finishLoading = () => {\n        this.setState({\n            loading: false\n        })\n    }\n\n\n    render() {\n        return <div id={this.id} className=\"container\">\n            <div className=\"img-container\">\n                <Transition timeout={300} in={!this.state.content}>\n                    {(state) => (\n                        <img style={{...defaultStyle, ...transitionStyles[state]}} className=\"image\"\n                             src={\"/media/\" + this.id + \".png\"} onLoad={this.showTitle}/>\n                    )}\n                </Transition>\n\n                <Transition timeout={300} in={!this.state.content}>\n                    {(state) => (\n                        <div style={{...defaultColor, ...transitionColor[state]}} className=\"title-black\"\n                             onClick={this.toggleContent}>{this.title}</div>\n\n                    )}\n                </Transition>\n\n                <div className=\"fa-container\">\n                    {/*<div className=\"fa-title\" onClick={this.close}>{this.props.title}</div>*/}\n                    <div className=\"fa-left-container\">\n                        <video className=\"fa-video\" controls src={\"/media/fa.mp4\"} type={\"video/mp4\"}\n                               onLoadedData={this.finishLoading}>Sorry\n                        </video>\n                        <img className=\"left-image\" src={\"/media/fa1.png\"}/>\n                    </div>\n                    <div className=\"fa-right-container\">\n                        <div className=\"fa-text\">\n                            Interactive web application for uploading an audio file with human speech and displaying the\n                            corresponding lip movements on the provided avatar.\n                            <br/>\n                            A neural network model is used to predict the sequence of phonemes which is then translated\n                            to\n                            visemes and mapped onto the avatar. The avatar was created in Blender and each viseme is\n                            treated\n                            as combinations of shape keyed facial configurations.\n                        </div>\n                        {/*<a href={\"https://facialanimation.page\"}>webpage</a>*/}\n                        <a href={\"https://vimeo.com/518277009\"}>video</a>\n                        <a href={\"https://github.com/nowickam/facial-animation/tree/production\"}>github</a>\n                        {/*<a className=\"close\" onClick={this.close}>close</a>*/}\n                    </div>\n\n                </div>\n\n            </div>\n\n            {this.state.loading && <div className=\"overlay-content\">\n                <DotLoader color={\"#4758FF\"} loading={this.state.loading} css={override} size={`30vmax`}/>\n            </div>}\n\n        </div>\n    }\n}\n\nexport default Fa;","import {Component, React} from 'react';\nimport {Transition} from \"react-transition-group\";\nimport '../css/Fa.css'\nimport DotLoader from \"react-spinners/DotLoader\";\nimport {defaultColor, defaultStyle, override, transitionColor, transitionStyles} from \"../App\";\n\nclass Fm extends Component {\n    constructor(props) {\n        super();\n        this.id = props.id\n        this.title = props.title\n        this.state = {\n            loading: true,\n            content: false,\n            title: false,\n        }\n    }\n\n    toggleContent = () => {\n        if (this.state.content) {\n            this.setState({\n                content: false,\n            })\n        } else {\n            this.setState({\n                content: this.id,\n            })\n        }\n    }\n\n    showTitle = () => {\n        this.setState({\n            title: true\n        })\n    }\n\n\n    finishLoading = () => {\n        this.setState({\n            loading: false\n        })\n    }\n\n\n    render() {\n        return <div id={this.id} className=\"container\">\n            <div className=\"img-container\">\n                <Transition timeout={300} in={!this.state.content}>\n                    {(state) => (\n                        <img style={{...defaultStyle, ...transitionStyles[state]}} className=\"image\"\n                             src={\"/media/\" + this.id + \".png\"} onLoad={this.showTitle}/>\n                    )}\n                </Transition>\n\n                <Transition timeout={300} in={!this.state.content}>\n                    {(state) => (\n                        <div style={{...defaultColor, ...transitionColor[state]}} className=\"title-black\"\n                             onClick={this.toggleContent}>{this.title}</div>\n\n                    )}\n                </Transition>\n\n                <div className=\"fa-container\">\n                    {/*<div className=\"fa-title\" onClick={this.close}>{this.props.title}</div>*/}\n                    <div className=\"fa-left-container\">\n                        <video className=\"fa-video\" controls src={\"/media/fm.mp4\"} type={\"video/mp4\"}\n                               onLoadedData={this.finishLoading}>Sorry\n                        </video>\n                        <div className=\"fa-text\">\n                            A web application aimed at displaying a graphical interpretation of the movement of face.\n                        </div>\n                        <div className=\"block\">\n                            <a className=\"margin\" href={\"https://nowickam.github.io/face-mirror/\"}>webpage</a>\n                            <a href={\"https://github.com/nowickam/face-mirror\"}>github</a>\n                        </div>\n                    </div>\n                    <div className=\"fa-right-container\">\n                        <img className=\"left-image\" src={\"/media/fm2.png\"}/>\n\n                        {/*<a className=\"close\" onClick={this.close}>close</a>*/}\n                    </div>\n\n                </div>\n\n            </div>\n\n            {this.state.loading && <div className=\"overlay-content\">\n                <DotLoader color={\"#4758FF\"} loading={this.state.loading} css={override} size={`30vmax`}/>\n            </div>}\n\n        </div>\n    }\n}\n\nexport default Fm;","import {Component, React} from 'react';\nimport {Transition} from \"react-transition-group\";\nimport '../css/Fa.css'\nimport DotLoader from \"react-spinners/DotLoader\";\nimport {defaultColor, defaultStyle, override, transitionColor, transitionStyles} from \"../App\";\n\nclass Ll extends Component {\n    constructor(props) {\n        super();\n        this.id = props.id\n        this.title = props.title\n        this.state = {\n            loading: true,\n            content: false,\n            title: false,\n        }\n    }\n\n    toggleContent = () => {\n        if (this.state.content) {\n            this.setState({\n                content: false,\n            })\n        } else {\n            this.setState({\n                content: this.id,\n            })\n        }\n    }\n\n    showTitle = () => {\n        this.setState({\n            title: true\n        })\n    }\n\n\n    finishLoading = () => {\n        this.setState({\n            loading: false\n        })\n    }\n\n\n    render() {\n        return <div id={this.id} className=\"container\">\n            <div className=\"img-container\">\n                <Transition timeout={300} in={!this.state.content}>\n                    {(state) => (\n                        <img style={{...defaultStyle, ...transitionStyles[state]}} className=\"image\"\n                             src={\"/media/\" + this.id + \".png\"} onLoad={this.showTitle}/>\n                    )}\n                </Transition>\n\n                <Transition timeout={300} in={!this.state.content}>\n                    {(state) => (\n                        <div style={{...defaultColor, ...transitionColor[state]}} className=\"title-black\"\n                             onClick={this.toggleContent}>{this.title}</div>\n\n                    )}\n                </Transition>\n\n                <div className=\"fa-container\">\n                    {/*<div className=\"fa-title\" onClick={this.close}>{this.props.title}</div>*/}\n                    <div className=\"fa-left-container\">\n                        <video className=\"ll-video\" controls src={\"/media/ll.mp4\"} type={\"video/mp4\"}\n                               onLoadedData={this.finishLoading}>Sorry\n                        </video>\n\n                    </div>\n                    <div className=\"fa-right-container\">\n                        <div className=\"fa-text\">\n                            A Java game emulating the gameplay of Lunar Lander in 3D (inspired by Atari's Lunar Lander\n                            and by Daniel Shiffman's Terrain Generation).\n                        </div>\n                        <a href={\"https://github.com/nowickam/lunar-lander-3d\"}>github</a>\n\n                        {/*<a className=\"close\" onClick={this.close}>close</a>*/}\n                    </div>\n\n                </div>\n\n            </div>\n\n            {this.state.loading && <div className=\"overlay-content\">\n                <DotLoader color={\"#4758FF\"} loading={this.state.loading} css={override} size={`30vmax`}/>\n            </div>}\n\n        </div>\n    }\n}\n\nexport default Ll;","import {Component, React} from 'react';\nimport {Transition} from \"react-transition-group\";\nimport '../css/Fa.css'\nimport DotLoader from \"react-spinners/DotLoader\";\nimport {defaultColor, defaultStyle, override, transitionColor, transitionStyles} from \"../App\";\n\nclass Ev extends Component {\n    constructor(props) {\n        super();\n        this.id = props.id\n        this.title = props.title\n        this.state = {\n            loading: true,\n            content: false,\n            title: false,\n        }\n    }\n\n    toggleContent = () => {\n        if (this.state.content) {\n            this.setState({\n                content: false,\n            })\n        } else {\n            this.setState({\n                content: this.id,\n            })\n        }\n    }\n\n    showTitle = () => {\n        this.setState({\n            title: true\n        })\n    }\n\n\n    finishLoading = () => {\n        this.setState({\n            loading: false\n        })\n    }\n\n\n    render() {\n        return <div id={this.id} className=\"container\">\n            <div className=\"img-container\">\n                <Transition timeout={300} in={!this.state.content}>\n                    {(state) => (\n                        <img style={{...defaultStyle, ...transitionStyles[state]}} className=\"image\"\n                             src={\"/media/\" + this.id + \".png\"} onLoad={this.showTitle}/>\n                    )}\n                </Transition>\n\n                <Transition timeout={300} in={!this.state.content}>\n                    {(state) => (\n                        <div style={{...defaultColor, ...transitionColor[state]}} className=\"title-black\"\n                             onClick={this.toggleContent}>{this.title}</div>\n\n                    )}\n                </Transition>\n\n                <div className=\"fa-container\">\n                    {/*<div className=\"fa-title\" onClick={this.close}>{this.props.title}</div>*/}\n                    <div className=\"fa-container-vert-height-ev\">\n                        <div className=\"fa-upper-container\">\n                            <div className=\"fa-text\">\n                                A generative art-based animation portraying the user’s mood.\n                                Two AI components serve as means for obtaining data and processing it.\n                                The output image is determined by a function which takes as a parameter the predicted\n                                emotion from the webcam.\n                            </div>\n                            <a href={\"https://github.com/nowickam/emotion-visualizer\"}>github</a>\n                        </div>\n                        <div className=\"fa-lower-container\">\n                            <video className=\"fa-video\" controls src={\"/media/ev.mp4\"} type={\"video/mp4\"}\n                                   onLoadedData={this.finishLoading}>Sorry\n                            </video>\n                            <img className=\"left-image\" src={\"/media/ev2.png\"}/>\n                        </div>\n                        {/*<a className=\"close marg-right\" onClick={this.close}>close</a>*/}\n                    </div>\n\n                </div>\n\n            </div>\n\n            {this.state.loading && <div className=\"overlay-content\">\n                <DotLoader color={\"#4758FF\"} loading={this.state.loading} css={override} size={`30vmax`}/>\n            </div>}\n\n        </div>\n    }\n}\n\nexport default Ev;","import {Component, React} from 'react';\nimport '../css/Fa.css'\nimport DotLoader from \"react-spinners/DotLoader\";\nimport {defaultColor, defaultStyle, override, transitionColor, transitionStyles} from '../App'\nimport {Transition} from \"react-transition-group\";\n\n\nclass Fa extends Component {\n    constructor(props) {\n        super();\n        this.id = props.id\n        this.title = props.title\n        this.state = {\n            loading: true,\n            content: false,\n            title: false,\n        }\n    }\n\n    toggleContent = () => {\n        if (this.state.content) {\n            this.setState({\n                content: false,\n            })\n        } else {\n            this.setState({\n                content: this.id,\n            })\n        }\n    }\n\n    showTitle = () => {\n        this.setState({\n            title: true\n        })\n    }\n\n\n    finishLoading = () => {\n        this.setState({\n            loading: false\n        })\n    }\n\n\n    render() {\n        return <div id={this.id} className=\"container\">\n            <div className=\"img-container\">\n                <Transition timeout={300} in={!this.state.content}>\n                    {(state) => (\n                        <img style={{...defaultStyle, ...transitionStyles[state]}} className=\"image\"\n                             src={\"/media/\" + this.id + \".png\"} onLoad={this.showTitle}/>\n                    )}\n                </Transition>\n\n                <Transition timeout={300} in={!this.state.content}>\n                    {(state) => (\n                        <div style={{...defaultColor, ...transitionColor[state]}} className=\"title-black\"\n                             onClick={this.toggleContent}>{this.title}</div>\n\n                    )}\n                </Transition>\n\n                <div className=\"fa-container\">\n                    {/*<div className=\"fa-title\" onClick={this.close}>{this.props.title}</div>*/}\n                    <div className=\"fa-left-container\">\n                        <video className=\"fa-video\" controls src={\"/media/fa.mp4\"} type={\"video/mp4\"}\n                               onLoadedData={this.finishLoading}>Sorry\n                        </video>\n                        <img className=\"left-image\" src={\"/media/fa1.png\"}/>\n                    </div>\n                    <div className=\"fa-right-container\">\n                        <div className=\"fa-text\">\n                            Interactive web application for uploading an audio file with human speech and displaying the\n                            corresponding lip movements on the provided avatar.\n                            <br/>\n                            A neural network model is used to predict the sequence of phonemes which is then translated\n                            to\n                            visemes and mapped onto the avatar. The avatar was created in Blender and each viseme is\n                            treated\n                            as combinations of shape keyed facial configurations.\n                        </div>\n                        {/*<a href={\"https://facialanimation.page\"}>webpage</a>*/}\n                        <a href={\"https://vimeo.com/518277009\"}>video</a>\n                        <a href={\"https://github.com/nowickam/facial-animation/tree/production\"}>github</a>\n                        {/*<a className=\"close\" onClick={this.close}>close</a>*/}\n                    </div>\n\n                </div>\n\n            </div>\n\n            {this.state.loading && <div className=\"overlay-content\">\n                <DotLoader color={\"#4758FF\"} loading={this.state.loading} css={override} size={`30vmax`}/>\n            </div>}\n\n        </div>\n    }\n}\n\nexport default Fa;","import {Component, React} from 'react';\nimport {Transition} from \"react-transition-group\";\nimport '../css/Fa.css'\nimport DotLoader from \"react-spinners/DotLoader\";\nimport {defaultColor, defaultStyle, override, transitionColor, transitionStyles} from \"../App\";\n\nclass Bio extends Component {\n    constructor(props) {\n        super();\n        this.id = props.id\n        this.title = props.title\n        this.state = {\n            loading: true,\n            content: false,\n            title: false,\n        }\n    }\n\n    toggleContent = () => {\n        if (this.state.content) {\n            this.setState({\n                content: false,\n            })\n        } else {\n            this.setState({\n                content: this.id,\n            })\n        }\n    }\n\n    showTitle = () => {\n        this.setState({\n            title: true\n        })\n    }\n\n\n    finishLoading = () => {\n        this.setState({\n            loading: false\n        })\n    }\n\n\n    render() {\n\n        return <div id={this.id} className=\"container\">\n            <div className=\"img-container\">\n                <Transition timeout={300} in={!this.state.content}>\n                    {(state) => (\n                        <img style={{...defaultStyle, ...transitionStyles[state]}} className=\"image\"\n                             src={\"/media/\" + this.id + \".png\"} onLoad={this.showTitle}/>\n                    )}\n                </Transition>\n\n                <Transition timeout={300} in={!this.state.content}>\n                    {(state) => (\n                        <div style={{...defaultColor, ...transitionColor[state]}} className=\"title-black\"\n                             onClick={this.toggleContent}>{this.title}</div>\n\n                    )}\n                </Transition>\n\n                <div className=\"fa-container\">\n                    {/*<div className=\"fa-title\" onClick={this.close}>{this.props.title}</div>*/}\n                    <div className=\"fa-container-vert-height-bio\">\n                        <div className=\"fa-lower-container\">\n                            {/*<video className=\"ll-video\" autoPlay loop muted src={\"/media/ll.mp4\"} type={\"video/mp4\"}>Sorry</video>*/}\n                            <img className=\"left-image\" src={\"/media/bio1.png\"} onLoad={this.finishLoading}/>\n                            <img className=\"left-image\" src={\"/media/bio2.png\"}/>\n                        </div>\n                        <div className=\"fa-upper-container\">\n                            <div className=\"fa-text\">\n                                A trailer to an interactive project on the biodiversity eradication issue. The animation\n                                is done in Blender with the use of Biodiversity Heritage Library image collection.\n                            </div>\n                            <a href={\"https://vimeo.com/manage/videos/518251014\"}>video</a>\n\n                            {/*<a className=\"close\" onClick={this.close}>close</a>*/}\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n\n            {this.state.loading && <div className=\"overlay-content\">\n                <DotLoader color={\"#4758FF\"} loading={this.state.loading} css={override} size={`30vmax`}/>\n            </div>}\n\n        </div>\n    }\n}\n\nexport default Bio;","import {Component, React} from 'react';\nimport './App.css';\nimport Home from './js/Home.js'\nimport About from './js/About.js'\nimport Menu from './js/Menu.js'\nimport Fa from './js/Fa.js'\nimport Fm from './js/Fm.js'\nimport Ll from './js/Ll.js'\nimport Ev from './js/Ev.js'\nimport Fp from './js/Fp.js'\nimport {css} from \"@emotion/core\";\nimport Bio from \"./js/Bio\";\n\n\nexport const defaultStyle = {\n    transition: `opacity ${300}ms ease-in-out`,\n    opacity: 0,\n};\n\nexport const transitionStyles = {\n    entering: {opacity: 1},\n    entered: {opacity: 1},\n    exiting: {opacity: 0},\n    exited: {opacity: 0, visibility: \"hidden\"},\n};\n\nexport const defaultColor = {\n    transition: `color ${300}ms ease-in-out`,\n    color: \"black\",\n};\n\nexport const transitionColor = {\n    entering: {color: \"white\"},\n    entered: {color: \"white\"},\n};\n\nexport const override = css`\n  display: block;\n  margin: 0 auto;\n  justify-content: center;\n`;\n\nclass App extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            show: false\n        }\n    }\n\n    showPage = () => {\n        this.setState({\n            show: true\n        })\n    }\n\n    render() {\n        return <div className=\"App\">\n            {this.state.show && <Menu/>}\n            <Home id=\"home\" showPage={this.showPage}/>\n            {this.state.show &&\n            <div>\n                <div className=\"spacer\"/>\n                <Fa id=\"fa\" title=\"AUDIO-DRIVEN ANIMATION\"/>\n                <Bio id=\"bio\" title=\"ADAM AND EVE\"/>\n                <Ev id=\"ev\" title=\"EMOTION VISUALIZER\"/>\n                <Fm id=\"fm\" title=\"FACE MIRROR\"/>\n                <Ll id=\"ll\" title=\"LUNAR LANDER\"/>\n                <Fp id=\"fp\" title=\"FLOWER POWER\"/>\n                <div className=\"spacer\"/>\n                <About id=\"about\"/>\n            </div>\n            }\n        </div>\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}